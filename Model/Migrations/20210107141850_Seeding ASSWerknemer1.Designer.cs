// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Repositories;

namespace Model.Migrations
{
    [DbContext(typeof(EFCoreMappingContext))]
    [Migration("20210107141850_Seeding ASSWerknemer1")]
    partial class SeedingASSWerknemer1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Model.Entities.ASSActiviteit", b =>
                {
                    b.Property<int>("ActiviteitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActiviteitId");

                    b.ToTable("ASSActiviteiten");
                });

            modelBuilder.Entity("Model.Entities.ASSBoek", b =>
                {
                    b.Property<int>("BoekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IsbnNr")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Titel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BoekId");

                    b.HasIndex("IsbnNr")
                        .IsUnique();

                    b.ToTable("ASSBoeken");

                    b.HasData(
                        new
                        {
                            BoekId = 1,
                            IsbnNr = "0-0705918-0-6",
                            Titel = "C++ : For Scientists and Engineers"
                        },
                        new
                        {
                            BoekId = 2,
                            IsbnNr = "0-0788212-3-1",
                            Titel = "C++ : The Complete Reference"
                        },
                        new
                        {
                            BoekId = 3,
                            IsbnNr = "1-5659211-6-X",
                            Titel = "C++ : The Core Language"
                        },
                        new
                        {
                            BoekId = 4,
                            IsbnNr = "0-4448771-8-5",
                            Titel = "Relational Database Systems"
                        },
                        new
                        {
                            BoekId = 5,
                            IsbnNr = "1-5595851-1-0",
                            Titel = "Access from the Ground Up"
                        },
                        new
                        {
                            BoekId = 6,
                            IsbnNr = "0-0788212-2-3",
                            Titel = "Oracle : A Beginner''s Guide"
                        },
                        new
                        {
                            BoekId = 7,
                            IsbnNr = "0-0788209-7-9",
                            Titel = "Oracle : The Complete Reference"
                        });
                });

            modelBuilder.Entity("Model.Entities.ASSBoekCursus", b =>
                {
                    b.Property<int>("BoekId")
                        .HasColumnType("int");

                    b.Property<int>("CursusId")
                        .HasColumnType("int");

                    b.Property<int>("VolgNr")
                        .HasColumnType("int");

                    b.HasKey("BoekId", "CursusId");

                    b.HasIndex("CursusId");

                    b.ToTable("ASSBoekenCursussen");
                });

            modelBuilder.Entity("Model.Entities.ASSCampus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CampusId");

                    b.ToTable("ASSCampussen");
                });

            modelBuilder.Entity("Model.Entities.ASSCursus", b =>
                {
                    b.Property<int>("CursusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CursusId");

                    b.ToTable("ASSCursussen");

                    b.HasData(
                        new
                        {
                            CursusId = 1,
                            Naam = "C++"
                        },
                        new
                        {
                            CursusId = 2,
                            Naam = "Access"
                        },
                        new
                        {
                            CursusId = 3,
                            Naam = "Oracle"
                        });
                });

            modelBuilder.Entity("Model.Entities.ASSDocent", b =>
                {
                    b.Property<int>("DocentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<string>("Familienaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HeeftRijbewijs")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InDienst")
                        .HasColumnType("date");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Wedde")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Maandwedde");

                    b.HasKey("DocentId");

                    b.HasIndex("CampusId");

                    b.ToTable("ASSDocenten");
                });

            modelBuilder.Entity("Model.Entities.ASSDocentActiviteit", b =>
                {
                    b.Property<int>("DocentId")
                        .HasColumnType("int");

                    b.Property<int>("ActiviteitId")
                        .HasColumnType("int");

                    b.Property<int>("AantalUren")
                        .HasColumnType("int");

                    b.HasKey("DocentId", "ActiviteitId");

                    b.HasIndex("ActiviteitId");

                    b.ToTable("ASSDocentenActiviteiten");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer", b =>
                {
                    b.Property<int>("WerknemerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Familienaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OversteId")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WerknemerId");

                    b.HasIndex("OversteId");

                    b.ToTable("AssWerknemers");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer1", b =>
                {
                    b.Property<int>("WerknemerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Familienaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OversteId")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("WerknemerId");

                    b.HasIndex("OversteId");

                    b.ToTable("ASSWerknemers1");

                    b.HasData(
                        new
                        {
                            WerknemerId = 1,
                            Familienaam = "Szavay",
                            Voornaam = "Agnes"
                        },
                        new
                        {
                            WerknemerId = 2,
                            Familienaam = "Radwanska",
                            Voornaam = "Agnieszka"
                        },
                        new
                        {
                            WerknemerId = 3,
                            Familienaam = "Calleri",
                            Voornaam = "Agustin"
                        },
                        new
                        {
                            WerknemerId = 4,
                            Familienaam = "Sugiyama",
                            OversteId = 1,
                            Voornaam = "Ai"
                        },
                        new
                        {
                            WerknemerId = 5,
                            Familienaam = "Amanmuradova",
                            OversteId = 1,
                            Voornaam = "Akgul"
                        },
                        new
                        {
                            WerknemerId = 6,
                            Familienaam = "Montanes",
                            Voornaam = "Albert"
                        },
                        new
                        {
                            WerknemerId = 7,
                            Familienaam = "Martin",
                            OversteId = 1,
                            Voornaam = "Alberto"
                        },
                        new
                        {
                            WerknemerId = 8,
                            Familienaam = "Wozniak",
                            OversteId = 7,
                            Voornaam = "Aleksandra"
                        },
                        new
                        {
                            WerknemerId = 9,
                            Familienaam = "Kleybanova",
                            Voornaam = "Alisa"
                        },
                        new
                        {
                            WerknemerId = 10,
                            Familienaam = "Cornet",
                            OversteId = 1,
                            Voornaam = "Alize"
                        },
                        new
                        {
                            WerknemerId = 11,
                            Familienaam = "Kudryavtseva",
                            OversteId = 5,
                            Voornaam = "Alla"
                        },
                        new
                        {
                            WerknemerId = 12,
                            Familienaam = "Bondarenko",
                            Voornaam = "Alona"
                        },
                        new
                        {
                            WerknemerId = 13,
                            Familienaam = "Mauresmo",
                            OversteId = 10,
                            Voornaam = "Amelie"
                        },
                        new
                        {
                            WerknemerId = 14,
                            Familienaam = "Ivanovic",
                            OversteId = 11,
                            Voornaam = "Ana"
                        },
                        new
                        {
                            WerknemerId = 15,
                            Familienaam = "Medina Garrigues",
                            Voornaam = "Anabel"
                        },
                        new
                        {
                            WerknemerId = 16,
                            Familienaam = "Pavlyuchenkova",
                            OversteId = 15,
                            Voornaam = "Anastasia"
                        },
                        new
                        {
                            WerknemerId = 17,
                            Familienaam = "Yakimova",
                            OversteId = 13,
                            Voornaam = "Anastasiya"
                        },
                        new
                        {
                            WerknemerId = 18,
                            Familienaam = "Beck",
                            Voornaam = "Andreas"
                        },
                        new
                        {
                            WerknemerId = 19,
                            Familienaam = "Seppi",
                            OversteId = 17,
                            Voornaam = "Andreas"
                        },
                        new
                        {
                            WerknemerId = 20,
                            Familienaam = "Murray",
                            OversteId = 5,
                            Voornaam = "Andy"
                        },
                        new
                        {
                            WerknemerId = 21,
                            Familienaam = "Roddick",
                            Voornaam = "Andy"
                        },
                        new
                        {
                            WerknemerId = 22,
                            Familienaam = "Chakvetadze",
                            OversteId = 1,
                            Voornaam = "Anna"
                        },
                        new
                        {
                            WerknemerId = 23,
                            Familienaam = "Groenefeld",
                            OversteId = 22,
                            Voornaam = "Anna-Lena"
                        },
                        new
                        {
                            WerknemerId = 24,
                            Familienaam = "Keothavong",
                            Voornaam = "Anne"
                        },
                        new
                        {
                            WerknemerId = 25,
                            Familienaam = "Rezai",
                            OversteId = 11,
                            Voornaam = "Aravane"
                        },
                        new
                        {
                            WerknemerId = 26,
                            Familienaam = "Clement",
                            OversteId = 17,
                            Voornaam = "Arnaud"
                        },
                        new
                        {
                            WerknemerId = 27,
                            Familienaam = "Morita",
                            Voornaam = "Ayumi"
                        },
                        new
                        {
                            WerknemerId = 28,
                            Familienaam = "Zahlavova Strycova",
                            OversteId = 15,
                            Voornaam = "Barbora"
                        },
                        new
                        {
                            WerknemerId = 29,
                            Familienaam = "Mattek-Sands",
                            OversteId = 10,
                            Voornaam = "Bethanie"
                        },
                        new
                        {
                            WerknemerId = 30,
                            Familienaam = "Phau",
                            Voornaam = "Bjorn"
                        },
                        new
                        {
                            WerknemerId = 31,
                            Familienaam = "Reynolds",
                            OversteId = 10,
                            Voornaam = "Bobby"
                        },
                        new
                        {
                            WerknemerId = 32,
                            Familienaam = "Dabul",
                            OversteId = 26,
                            Voornaam = "Brian"
                        },
                        new
                        {
                            WerknemerId = 33,
                            Familienaam = "Pin",
                            Voornaam = "Camille"
                        },
                        new
                        {
                            WerknemerId = 34,
                            Familienaam = "Suarez Navarro",
                            OversteId = 3,
                            Voornaam = "Carla"
                        },
                        new
                        {
                            WerknemerId = 35,
                            Familienaam = "Moya",
                            OversteId = 25,
                            Voornaam = "Carlos"
                        },
                        new
                        {
                            WerknemerId = 36,
                            Familienaam = "Wozniacki",
                            Voornaam = "Caroline"
                        },
                        new
                        {
                            WerknemerId = 37,
                            Familienaam = "Dellacqua",
                            OversteId = 9,
                            Voornaam = "Casey"
                        },
                        new
                        {
                            WerknemerId = 38,
                            Familienaam = "Rochus",
                            OversteId = 23,
                            Voornaam = "Christophe"
                        },
                        new
                        {
                            WerknemerId = 39,
                            Familienaam = "Gimeno",
                            Voornaam = "Daniel"
                        },
                        new
                        {
                            WerknemerId = 40,
                            Familienaam = "Hantuchova",
                            OversteId = 31,
                            Voornaam = "Daniela"
                        },
                        new
                        {
                            WerknemerId = 41,
                            Familienaam = "Ferrer",
                            OversteId = 31,
                            Voornaam = "David"
                        },
                        new
                        {
                            WerknemerId = 42,
                            Familienaam = "Nalbandian",
                            Voornaam = "David"
                        },
                        new
                        {
                            WerknemerId = 43,
                            Familienaam = "Gremelmayr",
                            OversteId = 8,
                            Voornaam = "Denis"
                        },
                        new
                        {
                            WerknemerId = 44,
                            Familienaam = "Junqueira",
                            OversteId = 2,
                            Voornaam = "Diego"
                        },
                        new
                        {
                            WerknemerId = 45,
                            Familienaam = "Safina",
                            Voornaam = "Dinara"
                        },
                        new
                        {
                            WerknemerId = 46,
                            Familienaam = "Tursunov",
                            OversteId = 3,
                            Voornaam = "Dmitry"
                        },
                        new
                        {
                            WerknemerId = 47,
                            Familienaam = "Cibulkova",
                            OversteId = 26,
                            Voornaam = "Dominika"
                        },
                        new
                        {
                            WerknemerId = 48,
                            Familienaam = "Sela",
                            Voornaam = "Dudi"
                        },
                        new
                        {
                            WerknemerId = 49,
                            Familienaam = "Gallovits",
                            OversteId = 46,
                            Voornaam = "Edina"
                        },
                        new
                        {
                            WerknemerId = 50,
                            Familienaam = "Schwank",
                            Voornaam = "Eduardo"
                        },
                        new
                        {
                            WerknemerId = 51,
                            Familienaam = "Makarova",
                            Voornaam = "Ekaterina"
                        },
                        new
                        {
                            WerknemerId = 52,
                            Familienaam = "Dementieva",
                            OversteId = 51,
                            Voornaam = "Elena"
                        },
                        new
                        {
                            WerknemerId = 53,
                            Familienaam = "Vesnina",
                            OversteId = 36,
                            Voornaam = "Elena"
                        },
                        new
                        {
                            WerknemerId = 54,
                            Familienaam = "Gulbis",
                            Voornaam = "Ernests"
                        },
                        new
                        {
                            WerknemerId = 55,
                            Familienaam = "Korolev",
                            OversteId = 50,
                            Voornaam = "Evgueni"
                        },
                        new
                        {
                            WerknemerId = 56,
                            Familienaam = "Santoro",
                            OversteId = 50,
                            Voornaam = "Fabrice"
                        },
                        new
                        {
                            WerknemerId = 57,
                            Familienaam = "Lopez",
                            Voornaam = "Feliciano"
                        },
                        new
                        {
                            WerknemerId = 58,
                            Familienaam = "Gonzalez",
                            OversteId = 7,
                            Voornaam = "Fernando"
                        },
                        new
                        {
                            WerknemerId = 59,
                            Familienaam = "Verdasco",
                            OversteId = 6,
                            Voornaam = "Fernando"
                        },
                        new
                        {
                            WerknemerId = 60,
                            Familienaam = "Pennetta",
                            Voornaam = "Flavia"
                        },
                        new
                        {
                            WerknemerId = 61,
                            Familienaam = "Serra",
                            OversteId = 36,
                            Voornaam = "Florent"
                        },
                        new
                        {
                            WerknemerId = 62,
                            Familienaam = "Schiavone",
                            OversteId = 20,
                            Voornaam = "Francesca"
                        },
                        new
                        {
                            WerknemerId = 63,
                            Familienaam = "Gil",
                            Voornaam = "Frederico"
                        },
                        new
                        {
                            WerknemerId = 64,
                            Familienaam = "Monfils",
                            OversteId = 29,
                            Voornaam = "Gael"
                        },
                        new
                        {
                            WerknemerId = 65,
                            Familienaam = "Voskoboeva",
                            OversteId = 61,
                            Voornaam = "Galina"
                        },
                        new
                        {
                            WerknemerId = 66,
                            Familienaam = "Muller",
                            Voornaam = "Gilles"
                        },
                        new
                        {
                            WerknemerId = 67,
                            Familienaam = "Simon",
                            OversteId = 31,
                            Voornaam = "Gilles"
                        },
                        new
                        {
                            WerknemerId = 68,
                            Familienaam = "Dulko",
                            OversteId = 31,
                            Voornaam = "Gisela"
                        },
                        new
                        {
                            WerknemerId = 69,
                            Familienaam = "Canas",
                            Voornaam = "Guillermo"
                        },
                        new
                        {
                            WerknemerId = 70,
                            Familienaam = "Garcia-Lopez",
                            OversteId = 39,
                            Voornaam = "Guillermo"
                        },
                        new
                        {
                            WerknemerId = 71,
                            Familienaam = "Andreev",
                            OversteId = 29,
                            Voornaam = "Igor"
                        },
                        new
                        {
                            WerknemerId = 72,
                            Familienaam = "Kunitsyn",
                            Voornaam = "Igor"
                        },
                        new
                        {
                            WerknemerId = 73,
                            Familienaam = "Ljubicic",
                            OversteId = 33,
                            Voornaam = "Ivan"
                        },
                        new
                        {
                            WerknemerId = 74,
                            Familienaam = "Navarro-Pastor",
                            OversteId = 57,
                            Voornaam = "Ivan"
                        },
                        new
                        {
                            WerknemerId = 75,
                            Familienaam = "Benesova",
                            Voornaam = "Iveta"
                        },
                        new
                        {
                            WerknemerId = 76,
                            Familienaam = "Karlovic",
                            OversteId = 25,
                            Voornaam = "Ivo"
                        },
                        new
                        {
                            WerknemerId = 77,
                            Familienaam = "Blake",
                            OversteId = 26,
                            Voornaam = "James"
                        },
                        new
                        {
                            WerknemerId = 78,
                            Familienaam = "Hernych",
                            Voornaam = "Jan"
                        },
                        new
                        {
                            WerknemerId = 79,
                            Familienaam = "Tipsarevic",
                            OversteId = 51,
                            Voornaam = "Janko"
                        },
                        new
                        {
                            WerknemerId = 80,
                            Familienaam = "Nieminen",
                            OversteId = 49,
                            Voornaam = "Jarkko"
                        },
                        new
                        {
                            WerknemerId = 81,
                            Familienaam = "Groth",
                            Voornaam = "Jarmila"
                        },
                        new
                        {
                            WerknemerId = 82,
                            Familienaam = "Dokic",
                            OversteId = 31,
                            Voornaam = "Jelena"
                        },
                        new
                        {
                            WerknemerId = 83,
                            Familienaam = "Jankovic",
                            OversteId = 49,
                            Voornaam = "Jelena"
                        },
                        new
                        {
                            WerknemerId = 84,
                            Familienaam = "Chardy",
                            Voornaam = "Jeremy"
                        },
                        new
                        {
                            WerknemerId = 85,
                            Familienaam = "Zheng",
                            OversteId = 16,
                            Voornaam = "Jie"
                        },
                        new
                        {
                            WerknemerId = 86,
                            Familienaam = "Acasuso",
                            OversteId = 29,
                            Voornaam = "Jose"
                        },
                        new
                        {
                            WerknemerId = 87,
                            Familienaam = "Tsonga",
                            Voornaam = "Jo-Wilfried"
                        },
                        new
                        {
                            WerknemerId = 88,
                            Familienaam = "Carlos Ferrero",
                            OversteId = 57,
                            Voornaam = "Juan"
                        },
                        new
                        {
                            WerknemerId = 89,
                            Familienaam = "Martin Del Potro",
                            OversteId = 65,
                            Voornaam = "Juan"
                        },
                        new
                        {
                            WerknemerId = 90,
                            Familienaam = "Monaco",
                            Voornaam = "Juan"
                        },
                        new
                        {
                            WerknemerId = 91,
                            Familienaam = "Coin",
                            OversteId = 21,
                            Voornaam = "Julie"
                        },
                        new
                        {
                            WerknemerId = 92,
                            Familienaam = "Benneteau",
                            OversteId = 55,
                            Voornaam = "Julien"
                        },
                        new
                        {
                            WerknemerId = 93,
                            Familienaam = "Melzer",
                            Voornaam = "Jurgen"
                        },
                        new
                        {
                            WerknemerId = 94,
                            Familienaam = "Kanepi",
                            OversteId = 25,
                            Voornaam = "Kaia"
                        },
                        new
                        {
                            WerknemerId = 95,
                            Familienaam = "Srebotnik",
                            OversteId = 73,
                            Voornaam = "Katarina"
                        },
                        new
                        {
                            WerknemerId = 96,
                            Familienaam = "Bondarenko",
                            Voornaam = "Kateryna"
                        },
                        new
                        {
                            WerknemerId = 97,
                            Familienaam = "Nishikori",
                            OversteId = 28,
                            Voornaam = "Kei"
                        },
                        new
                        {
                            WerknemerId = 98,
                            Familienaam = "Flipkens",
                            OversteId = 57,
                            Voornaam = "Kirsten"
                        },
                        new
                        {
                            WerknemerId = 99,
                            Familienaam = "Zakopalova",
                            Voornaam = "Klara"
                        },
                        new
                        {
                            WerknemerId = 100,
                            Familienaam = "Barrois",
                            OversteId = 57,
                            Voornaam = "Kristina"
                        },
                        new
                        {
                            WerknemerId = 101,
                            Familienaam = "Vliegen",
                            OversteId = 50,
                            Voornaam = "Kristof"
                        },
                        new
                        {
                            WerknemerId = 102,
                            Familienaam = "Mayer",
                            Voornaam = "Leonardo"
                        },
                        new
                        {
                            WerknemerId = 103,
                            Familienaam = "Hewitt",
                            OversteId = 43,
                            Voornaam = "Lleyton"
                        },
                        new
                        {
                            WerknemerId = 104,
                            Familienaam = "Dominguez Lino",
                            OversteId = 99,
                            Voornaam = "Lourdes"
                        },
                        new
                        {
                            WerknemerId = 105,
                            Familienaam = "Hradecka",
                            Voornaam = "Lucie"
                        },
                        new
                        {
                            WerknemerId = 106,
                            Familienaam = "Safarova",
                            OversteId = 41,
                            Voornaam = "Lucie"
                        },
                        new
                        {
                            WerknemerId = 107,
                            Familienaam = "Rybarikova",
                            OversteId = 91,
                            Voornaam = "Magdalena"
                        },
                        new
                        {
                            WerknemerId = 108,
                            Familienaam = "Safin",
                            Voornaam = "Marat"
                        },
                        new
                        {
                            WerknemerId = 109,
                            Familienaam = "Gicquel",
                            OversteId = 29,
                            Voornaam = "Marc"
                        },
                        new
                        {
                            WerknemerId = 110,
                            Familienaam = "Granollers",
                            OversteId = 61,
                            Voornaam = "Marcel"
                        },
                        new
                        {
                            WerknemerId = 111,
                            Familienaam = "Baghdatis",
                            Voornaam = "Marcos"
                        },
                        new
                        {
                            WerknemerId = 112,
                            Familienaam = "Fish",
                            OversteId = 21,
                            Voornaam = "Mardy"
                        },
                        new
                        {
                            WerknemerId = 113,
                            Familienaam = "Ani",
                            OversteId = 16,
                            Voornaam = "Maret"
                        },
                        new
                        {
                            WerknemerId = 114,
                            Familienaam = "Jose Martinez Sanchez",
                            Voornaam = "Maria"
                        },
                        new
                        {
                            WerknemerId = 115,
                            Familienaam = "Kirilenko",
                            OversteId = 46,
                            Voornaam = "Maria"
                        },
                        new
                        {
                            WerknemerId = 116,
                            Familienaam = "Sharapova",
                            OversteId = 46,
                            Voornaam = "Maria"
                        },
                        new
                        {
                            WerknemerId = 117,
                            Familienaam = "Cilic",
                            Voornaam = "Marin"
                        },
                        new
                        {
                            WerknemerId = 118,
                            Familienaam = "Erakovic",
                            OversteId = 49,
                            Voornaam = "Marina"
                        },
                        new
                        {
                            WerknemerId = 119,
                            Familienaam = "Ancic",
                            OversteId = 26,
                            Voornaam = "Mario"
                        },
                        new
                        {
                            WerknemerId = 120,
                            Familienaam = "Bartoli",
                            Voornaam = "Marion"
                        },
                        new
                        {
                            WerknemerId = 121,
                            Familienaam = "Koryttseva",
                            OversteId = 61,
                            Voornaam = "Mariya"
                        },
                        new
                        {
                            WerknemerId = 122,
                            Familienaam = "Vassallo-Arguello",
                            OversteId = 103,
                            Voornaam = "Martin"
                        },
                        new
                        {
                            WerknemerId = 123,
                            Familienaam = "Johansson",
                            Voornaam = "Mathilde"
                        },
                        new
                        {
                            WerknemerId = 124,
                            Familienaam = "Gonzalez",
                            OversteId = 49,
                            Voornaam = "Maximo"
                        },
                        new
                        {
                            WerknemerId = 125,
                            Familienaam = "Czink",
                            OversteId = 36,
                            Voornaam = "Melinda"
                        },
                        new
                        {
                            WerknemerId = 126,
                            Familienaam = "Llodra",
                            Voornaam = "Michael"
                        },
                        new
                        {
                            WerknemerId = 127,
                            Familienaam = "Zverev",
                            OversteId = 43,
                            Voornaam = "Michael"
                        },
                        new
                        {
                            WerknemerId = 128,
                            Familienaam = "Youzhny",
                            OversteId = 50,
                            Voornaam = "Mikhail"
                        },
                        new
                        {
                            WerknemerId = 129,
                            Familienaam = "Niculescu",
                            Voornaam = "Monica"
                        },
                        new
                        {
                            WerknemerId = 130,
                            Familienaam = "Li",
                            OversteId = 5,
                            Voornaam = "Na"
                        },
                        new
                        {
                            WerknemerId = 131,
                            Familienaam = "Petrova",
                            OversteId = 36,
                            Voornaam = "Nadia"
                        },
                        new
                        {
                            WerknemerId = 132,
                            Familienaam = "Dechy",
                            Voornaam = "Nathalie"
                        },
                        new
                        {
                            WerknemerId = 133,
                            Familienaam = "Almagro",
                            OversteId = 50,
                            Voornaam = "Nicolas"
                        },
                        new
                        {
                            WerknemerId = 134,
                            Familienaam = "Devilder",
                            OversteId = 57,
                            Voornaam = "Nicolas"
                        },
                        new
                        {
                            WerknemerId = 135,
                            Familienaam = "Kiefer",
                            Voornaam = "Nicolas"
                        },
                        new
                        {
                            WerknemerId = 136,
                            Familienaam = "Massu",
                            OversteId = 36,
                            Voornaam = "Nicolas"
                        },
                        new
                        {
                            WerknemerId = 137,
                            Familienaam = "Vaidisova",
                            OversteId = 55,
                            Voornaam = "Nicole"
                        },
                        new
                        {
                            WerknemerId = 138,
                            Familienaam = "Davydenko",
                            Voornaam = "Nikolay"
                        },
                        new
                        {
                            WerknemerId = 139,
                            Familienaam = "Djokovic",
                            OversteId = 41,
                            Voornaam = "Novak"
                        },
                        new
                        {
                            WerknemerId = 140,
                            Familienaam = "Govortsova",
                            OversteId = 41,
                            Voornaam = "Olga"
                        },
                        new
                        {
                            WerknemerId = 141,
                            Familienaam = "Hernandez",
                            Voornaam = "Oscar"
                        },
                        new
                        {
                            WerknemerId = 142,
                            Familienaam = "Andujar",
                            OversteId = 36,
                            Voornaam = "Pablo"
                        },
                        new
                        {
                            WerknemerId = 143,
                            Familienaam = "Mayr",
                            OversteId = 33,
                            Voornaam = "Patricia"
                        },
                        new
                        {
                            WerknemerId = 144,
                            Familienaam = "Schnyder",
                            Voornaam = "Patty"
                        },
                        new
                        {
                            WerknemerId = 145,
                            Familienaam = "Capdeville",
                            OversteId = 41,
                            Voornaam = "Paul"
                        },
                        new
                        {
                            WerknemerId = 146,
                            Familienaam = "Mathieu",
                            OversteId = 71,
                            Voornaam = "Paul-Henri"
                        },
                        new
                        {
                            WerknemerId = 147,
                            Familienaam = "Parmentier",
                            Voornaam = "Pauline"
                        },
                        new
                        {
                            WerknemerId = 148,
                            Familienaam = "Cetkovska",
                            OversteId = 46,
                            Voornaam = "Petra"
                        },
                        new
                        {
                            WerknemerId = 149,
                            Familienaam = "Kvitova",
                            OversteId = 36,
                            Voornaam = "Petra"
                        },
                        new
                        {
                            WerknemerId = 150,
                            Familienaam = "Kohlschreiber",
                            Voornaam = "Philipp"
                        },
                        new
                        {
                            WerknemerId = 151,
                            Familienaam = "Petzschner",
                            OversteId = 71,
                            Voornaam = "Philipp"
                        },
                        new
                        {
                            WerknemerId = 152,
                            Familienaam = "Starace",
                            OversteId = 43,
                            Voornaam = "Potito"
                        },
                        new
                        {
                            WerknemerId = 153,
                            Familienaam = "Stepanek",
                            Voornaam = "Radek"
                        },
                        new
                        {
                            WerknemerId = 154,
                            Familienaam = "Nadal",
                            OversteId = 31,
                            Voornaam = "Rafael"
                        },
                        new
                        {
                            WerknemerId = 155,
                            Familienaam = "Schuettler",
                            OversteId = 61,
                            Voornaam = "Rainer"
                        },
                        new
                        {
                            WerknemerId = 156,
                            Familienaam = "Gasquet",
                            Voornaam = "Richard"
                        },
                        new
                        {
                            WerknemerId = 157,
                            Familienaam = "Ginepri",
                            OversteId = 36,
                            Voornaam = "Robby"
                        },
                        new
                        {
                            WerknemerId = 158,
                            Familienaam = "Kendrick",
                            OversteId = 49,
                            Voornaam = "Robert"
                        },
                        new
                        {
                            WerknemerId = 159,
                            Familienaam = "Vinci",
                            Voornaam = "Roberta"
                        },
                        new
                        {
                            WerknemerId = 160,
                            Familienaam = "Soderling",
                            OversteId = 46,
                            Voornaam = "Robin"
                        },
                        new
                        {
                            WerknemerId = 161,
                            Familienaam = "Federer",
                            OversteId = 36,
                            Voornaam = "Roger"
                        },
                        new
                        {
                            WerknemerId = 162,
                            Familienaam = "De Los Rios",
                            Voornaam = "Rossana"
                        },
                        new
                        {
                            WerknemerId = 163,
                            Familienaam = "Lisicki",
                            OversteId = 43,
                            Voornaam = "Sabine"
                        },
                        new
                        {
                            WerknemerId = 164,
                            Familienaam = "Stosur",
                            OversteId = 49,
                            Voornaam = "Samantha"
                        },
                        new
                        {
                            WerknemerId = 165,
                            Familienaam = "Querrey",
                            Voornaam = "Samuel"
                        },
                        new
                        {
                            WerknemerId = 166,
                            Familienaam = "Mirza",
                            OversteId = 26,
                            Voornaam = "Sania"
                        },
                        new
                        {
                            WerknemerId = 167,
                            Familienaam = "Errani",
                            OversteId = 25,
                            Voornaam = "Sara"
                        },
                        new
                        {
                            WerknemerId = 168,
                            Familienaam = "Williams",
                            Voornaam = "Serena"
                        },
                        new
                        {
                            WerknemerId = 169,
                            Familienaam = "Bremond",
                            OversteId = 57,
                            Voornaam = "Severine"
                        },
                        new
                        {
                            WerknemerId = 170,
                            Familienaam = "Peer",
                            OversteId = 25,
                            Voornaam = "Shahar"
                        },
                        new
                        {
                            WerknemerId = 171,
                            Familienaam = "Peng",
                            Voornaam = "Shuai"
                        },
                        new
                        {
                            WerknemerId = 172,
                            Familienaam = "Bolelli",
                            OversteId = 43,
                            Voornaam = "Simone"
                        },
                        new
                        {
                            WerknemerId = 173,
                            Familienaam = "Arvidsson",
                            OversteId = 46,
                            Voornaam = "Sofia"
                        },
                        new
                        {
                            WerknemerId = 174,
                            Familienaam = "Cirstea",
                            Voornaam = "Sorana"
                        },
                        new
                        {
                            WerknemerId = 175,
                            Familienaam = "Wawrinka",
                            OversteId = 73,
                            Voornaam = "Stanislas"
                        },
                        new
                        {
                            WerknemerId = 176,
                            Familienaam = "Cohen-Aloro",
                            OversteId = 100,
                            Voornaam = "Stephanie"
                        },
                        new
                        {
                            WerknemerId = 177,
                            Familienaam = "Kuznetsova",
                            Voornaam = "Svetlana"
                        },
                        new
                        {
                            WerknemerId = 178,
                            Familienaam = "Bammer",
                            OversteId = 43,
                            Voornaam = "Sybille"
                        },
                        new
                        {
                            WerknemerId = 179,
                            Familienaam = "Tanasugarn",
                            OversteId = 81,
                            Voornaam = "Tamarine"
                        },
                        new
                        {
                            WerknemerId = 180,
                            Familienaam = "Paszek",
                            Voornaam = "Tamira"
                        },
                        new
                        {
                            WerknemerId = 181,
                            Familienaam = "Garbin",
                            OversteId = 49,
                            Voornaam = "Tathiana"
                        },
                        new
                        {
                            WerknemerId = 182,
                            Familienaam = "Gabashvili",
                            OversteId = 81,
                            Voornaam = "Teimuraz"
                        },
                        new
                        {
                            WerknemerId = 183,
                            Familienaam = "Bellucci",
                            Voornaam = "Thomaz"
                        },
                        new
                        {
                            WerknemerId = 184,
                            Familienaam = "Bacsinszky",
                            OversteId = 51,
                            Voornaam = "Timea"
                        },
                        new
                        {
                            WerknemerId = 185,
                            Familienaam = "Berdych",
                            OversteId = 36,
                            Voornaam = "Tomas"
                        },
                        new
                        {
                            WerknemerId = 186,
                            Familienaam = "Haas",
                            Voornaam = "Tommy"
                        },
                        new
                        {
                            WerknemerId = 187,
                            Familienaam = "Robredo",
                            OversteId = 36,
                            Voornaam = "Tommy"
                        },
                        new
                        {
                            WerknemerId = 188,
                            Familienaam = "Pironkova",
                            OversteId = 73,
                            Voornaam = "Tsvetana"
                        },
                        new
                        {
                            WerknemerId = 189,
                            Familienaam = "King",
                            Voornaam = "Vania"
                        },
                        new
                        {
                            WerknemerId = 190,
                            Familienaam = "Williams",
                            OversteId = 41,
                            Voornaam = "Venus"
                        },
                        new
                        {
                            WerknemerId = 191,
                            Familienaam = "Dushevina",
                            OversteId = 37,
                            Voornaam = "Vera"
                        },
                        new
                        {
                            WerknemerId = 192,
                            Familienaam = "Zvonareva",
                            Voornaam = "Vera"
                        },
                        new
                        {
                            WerknemerId = 193,
                            Familienaam = "Hanescu",
                            OversteId = 43,
                            Voornaam = "Victor"
                        },
                        new
                        {
                            WerknemerId = 194,
                            Familienaam = "Azarenka",
                            OversteId = 65,
                            Voornaam = "Victoria"
                        },
                        new
                        {
                            WerknemerId = 195,
                            Familienaam = "Troicki",
                            Voornaam = "Viktor"
                        },
                        new
                        {
                            WerknemerId = 196,
                            Familienaam = "Razzano",
                            OversteId = 57,
                            Voornaam = "Virginie"
                        },
                        new
                        {
                            WerknemerId = 197,
                            Familienaam = "Odesnik",
                            OversteId = 36,
                            Voornaam = "Wayne"
                        },
                        new
                        {
                            WerknemerId = 198,
                            Familienaam = "Wickmayer",
                            Voornaam = "Yanina"
                        },
                        new
                        {
                            WerknemerId = 199,
                            Familienaam = "Lu",
                            OversteId = 17,
                            Voornaam = "Yen-Hsun"
                        },
                        new
                        {
                            WerknemerId = 200,
                            Familienaam = "Chan",
                            OversteId = 33,
                            Voornaam = "Yung-Jan"
                        });
                });

            modelBuilder.Entity("Model.Entities.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CampusNaam");

                    b.HasKey("CampusId");

                    b.ToTable("Campussen");
                });

            modelBuilder.Entity("Model.Entities.Docent", b =>
                {
                    b.Property<int>("DocentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<string>("Familienaam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("HeeftRijbewijs")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InDienst")
                        .HasColumnType("date");

                    b.Property<string>("LandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Wedde")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Maandwedde");

                    b.HasKey("DocentId");

                    b.HasIndex("CampusId");

                    b.ToTable("Docenten");
                });

            modelBuilder.Entity("Model.Entities.TPHCursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CursusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TPHCursussen");

                    b.HasDiscriminator<string>("CursusType").HasValue("TPHCursus");
                });

            modelBuilder.Entity("Model.Entities.TPHKlassikaleCursus", b =>
                {
                    b.HasBaseType("Model.Entities.TPHCursus");

                    b.Property<DateTime>("Tot")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Van")
                        .HasColumnType("datetime2");

                    b.ToTable("TPHCursussen");

                    b.HasDiscriminator().HasValue("K");
                });

            modelBuilder.Entity("Model.Entities.TPHZelfstudieCursus", b =>
                {
                    b.HasBaseType("Model.Entities.TPHCursus");

                    b.Property<int>("AantalDagen")
                        .HasColumnType("int");

                    b.ToTable("TPHCursussen");

                    b.HasDiscriminator().HasValue("Z");
                });

            modelBuilder.Entity("Model.Entities.ASSBoekCursus", b =>
                {
                    b.HasOne("Model.Entities.ASSBoek", "Boek")
                        .WithMany("BoekenCursussen")
                        .HasForeignKey("BoekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.ASSCursus", "Cursus")
                        .WithMany("BoekenCursussen")
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boek");

                    b.Navigation("Cursus");
                });

            modelBuilder.Entity("Model.Entities.ASSCampus", b =>
                {
                    b.OwnsOne("Model.Entities.Adres", "Adres", b1 =>
                        {
                            b1.Property<int>("ASSCampusCampusId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Gemeente");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HuisNr");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCd");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Straat");

                            b1.HasKey("ASSCampusCampusId");

                            b1.ToTable("ASSCampussen");

                            b1.WithOwner()
                                .HasForeignKey("ASSCampusCampusId");
                        });

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Model.Entities.ASSDocent", b =>
                {
                    b.HasOne("Model.Entities.ASSCampus", "ASSCampus")
                        .WithMany("ASSDocenten")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Model.Entities.Adres", "Adres", b1 =>
                        {
                            b1.Property<int>("ASSDocentDocentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Gemeente");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HuisNr");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCd");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Straat");

                            b1.HasKey("ASSDocentDocentId");

                            b1.ToTable("ASSDocenten");

                            b1.WithOwner()
                                .HasForeignKey("ASSDocentDocentId");
                        });

                    b.Navigation("Adres");

                    b.Navigation("ASSCampus");
                });

            modelBuilder.Entity("Model.Entities.ASSDocentActiviteit", b =>
                {
                    b.HasOne("Model.Entities.ASSActiviteit", "Activiteit")
                        .WithMany("DocentenActiviteiten")
                        .HasForeignKey("ActiviteitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.ASSDocent", "Docent")
                        .WithMany("DocentenActiviteiten")
                        .HasForeignKey("DocentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activiteit");

                    b.Navigation("Docent");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer", b =>
                {
                    b.HasOne("Model.Entities.ASSWerknemer", "Overste")
                        .WithMany("Werknemers")
                        .HasForeignKey("OversteId");

                    b.Navigation("Overste");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer1", b =>
                {
                    b.HasOne("Model.Entities.ASSWerknemer1", "Overste")
                        .WithMany("Werknemers")
                        .HasForeignKey("OversteId")
                        .HasConstraintName("FK_WerknemerOverste");

                    b.Navigation("Overste");
                });

            modelBuilder.Entity("Model.Entities.Campus", b =>
                {
                    b.OwnsOne("Model.Entities.Adres", "Adres", b1 =>
                        {
                            b1.Property<int>("CampusId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Gemeente");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HuisNr");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCd");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Straat");

                            b1.HasKey("CampusId");

                            b1.ToTable("Campussen");

                            b1.WithOwner()
                                .HasForeignKey("CampusId");
                        });

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Model.Entities.Docent", b =>
                {
                    b.HasOne("Model.Entities.Campus", "Campus")
                        .WithMany("Docenten")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Model.Entities.Adres", "AdresThuis", b1 =>
                        {
                            b1.Property<int>("DocentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("GemeenteThuis");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HuisNrThuis");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCdThuis");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StraatThuis");

                            b1.HasKey("DocentId");

                            b1.ToTable("Docenten");

                            b1.WithOwner()
                                .HasForeignKey("DocentId");
                        });

                    b.OwnsOne("Model.Entities.Adres", "AdresWerk", b1 =>
                        {
                            b1.Property<int>("DocentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("GemeenteWerk");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HuisNrWerk");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostCdWerk");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StraatWerk");

                            b1.HasKey("DocentId");

                            b1.ToTable("Docenten");

                            b1.WithOwner()
                                .HasForeignKey("DocentId");
                        });

                    b.Navigation("AdresThuis");

                    b.Navigation("AdresWerk");

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("Model.Entities.ASSActiviteit", b =>
                {
                    b.Navigation("DocentenActiviteiten");
                });

            modelBuilder.Entity("Model.Entities.ASSBoek", b =>
                {
                    b.Navigation("BoekenCursussen");
                });

            modelBuilder.Entity("Model.Entities.ASSCampus", b =>
                {
                    b.Navigation("ASSDocenten");
                });

            modelBuilder.Entity("Model.Entities.ASSCursus", b =>
                {
                    b.Navigation("BoekenCursussen");
                });

            modelBuilder.Entity("Model.Entities.ASSDocent", b =>
                {
                    b.Navigation("DocentenActiviteiten");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer", b =>
                {
                    b.Navigation("Werknemers");
                });

            modelBuilder.Entity("Model.Entities.ASSWerknemer1", b =>
                {
                    b.Navigation("Werknemers");
                });

            modelBuilder.Entity("Model.Entities.Campus", b =>
                {
                    b.Navigation("Docenten");
                });
#pragma warning restore 612, 618
        }
    }
}
